* goal #1: a simple calculator (+ - * / %) with precedence

* prunille app
  si fichier.pc existe
    si modif_time(ficher.prunille) > modif_time(fichier.pc)
      generer_bytecode
    sinon
      charger bytecode du fichier.pc
  sinon
    generer_bytecode

  def generer_bytecode
    charger fichier.prunille
    parse
    generate bytecode
    write bytecode

* deal with indentation

* write regex for 

  + classname
  + variable name
  + method name
  
* write readme

Think about
=================
* Full utf8 vs [a-zA_Z] pour les noms de classes, de méthodes, de variables, etc.
  Contre:
    On en arrive à mélanger plusieurs langues.
    Exemple: véhicule is new Véhicule
  Pour:
    Cela permettrait d'écrire facilement un DSL dans une langue autre que l'anglais

* method-name \ modificator

* one class in one file (like java)

* naming convention of constant (if constant exist...)
